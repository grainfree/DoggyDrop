@model IEnumerable<DoggyDrop.Models.TrashBin>
@using System.Text.Json

@{
    ViewData["Title"] = "Zemljevid";
    var json = JsonSerializer.Serialize(
        Model.Select(b => new
        {
            name = b.Name,
            latitude = b.Latitude,
            longitude = b.Longitude,
            date = b.DateAdded.ToString("dd.MM.yyyy"),
            image = b.FullImageUrl
        })
    );
    var binsJson = Html.Raw(json);
}

<style>
    #map {
        height: 100vh;
        width: 100%;
    }

    .fab-main {
        position: fixed;
        bottom: 80px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        background-color: #425F57;
        color: white;
        border-radius: 25px;
        padding: 14px 22px;
        font-size: 16px;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
    }

    .fab-refresh {
        position: fixed;
        bottom: 20px;
        left: 20px;
        width: 50px;
        height: 50px;
        background-color: #E25E3E;
        color: white;
        border: none;
        border-radius: 50%;
        font-size: 24px;
        line-height: 50px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0,0,0,0.3);
        z-index: 1000;
    }

    .fab-secondary {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
        width: 50px;
        height: 50px;
        background-color: #FFA447;
        color: white;
        border: none;
        border-radius: 50%;
        font-size: 28px;
        line-height: 50px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0,0,0,0.3);
    }

    #directionsPanel {
        padding: 10px;
        font-size: 16px;
    }
</style>

<!-- 🔄 Osveži pot -->
<button onclick="refreshRoute()" class="fab-refresh">🔄</button>

<!-- 📍 Najdi najbližji koš -->
<button onclick="findNearestTrashBin()" class="fab-main">📍 Najdi najbližji koš</button>

<!-- ➕ Dodaj koš -->
<a href="/Map/Add" class="fab-secondary">＋</a>

<!-- 🌍 Zemljevid -->
<div id="map"></div>

<!-- 📋 Navodila -->
<div id="directionsPanel"></div>

@section Scripts {
    <script>
        const bins = @binsJson;
        let map, directionsService, directionsRenderer;
        let userMarker;

        window.initMap = function () {
            directionsService = new google.maps.DirectionsService();
            directionsRenderer = new google.maps.DirectionsRenderer({
                polylineOptions: {
                    strokeColor: "#00796B",
                    strokeOpacity: 0.9,
                    strokeWeight: 6
                }
            });

            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 46.5547, lng: 15.6459 },
                zoom: 14,
                styles: [
                    { elementType: "geometry", stylers: [{ color: "#f5f5f5" }] },
                    { elementType: "labels.icon", stylers: [{ visibility: "off" }] },
                    { elementType: "labels.text.fill", stylers: [{ color: "#616161" }] },
                    { elementType: "labels.text.stroke", stylers: [{ color: "#f5f5f5" }] },
                    { featureType: "poi", elementType: "geometry", stylers: [{ color: "#eeeeee" }] },
                    { featureType: "poi.park", elementType: "geometry", stylers: [{ color: "#d6e9c6" }] },
                    { featureType: "road", elementType: "geometry", stylers: [{ color: "#ffffff" }] },
                    { featureType: "water", elementType: "geometry", stylers: [{ color: "#c9e6ff" }] }
                ]
            });

            directionsRenderer.setMap(map);
            directionsRenderer.setPanel(document.getElementById("directionsPanel"));

            bins.forEach(bin => {
                const marker = new google.maps.Marker({
                    position: { lat: bin.latitude, lng: bin.longitude },
                    map: map,
                    title: bin.name,
                    animation: google.maps.Animation.DROP
                });

                const infoContent = `
                    <div style="max-width: 200px;">
                        <strong>${bin.name}</strong><br>
                        Dodano: ${bin.date}<br>
                        ${bin.image ? `<img src="${bin.image}" alt="Koš" style="width:100%; margin-top:5px;">` : ""}
                    </div>
                `;

                const infoWindow = new google.maps.InfoWindow({ content: infoContent });
                marker.addListener("click", () => infoWindow.open(map, marker));
            });
        };

        function findNearestTrashBin() {
            if (navigator.geolocation) {
                navigator.geolocation.watchPosition(position => {
                    const userLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    // 🔄 Uporabnikov marker
                    if (userMarker) {
                        userMarker.setPosition(userLocation);
                    } else {
                        userMarker = new google.maps.Marker({
                            position: userLocation,
                            map: map,
                            icon: {
                                path: google.maps.SymbolPath.CIRCLE,
                                scale: 8,
                                fillColor: '#00796B',
                                fillOpacity: 1,
                                strokeWeight: 2,
                                strokeColor: 'white'
                            },
                            title: "Tvoja lokacija"
                        });
                    }

                    let nearestBin = null;
                    let shortestDistance = Infinity;

                    bins.forEach(bin => {
                        const dist = Math.sqrt(
                            Math.pow(bin.latitude - userLocation.lat, 2) +
                            Math.pow(bin.longitude - userLocation.lng, 2)
                        );
                        if (dist < shortestDistance) {
                            shortestDistance = dist;
                            nearestBin = bin;
                        }
                    });

                    if (nearestBin) {
                        const request = {
                            origin: userLocation,
                            destination: { lat: nearestBin.latitude, lng: nearestBin.longitude },
                            travelMode: google.maps.TravelMode.WALKING
                        };

                        directionsService.route(request, (result, status) => {
                            if (status === google.maps.DirectionsStatus.OK) {
                                directionsRenderer.setDirections(result);

                                const leg = result.routes[0].legs[0];
                                const duration = leg.duration.text;
                                const distance = leg.distance.text;

                                document.getElementById("directionsPanel").innerHTML = `
                                    <strong>⏱️ Čas hoje:</strong> ${duration}<br>
                                    <strong>📏 Razdalja:</strong> ${distance}
                                `;
                            } else {
                                alert("Napaka pri iskanju poti: " + status);
                            }
                        });
                    }
                }, () => alert("Napaka pri pridobivanju lokacije."), {
                    enableHighAccuracy: true,
                    maximumAge: 0,
                    timeout: 10000
                });
            } else {
                alert("Geolokacija ni podprta v tvojem brskalniku.");
            }
        }

        function refreshRoute() {
            findNearestTrashBin();
        }
    </script>

    <script async
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC7BZuc_0STrDlrpQL6HF3mcQJW2HV4cDI&callback=initMap">
    </script>
}
