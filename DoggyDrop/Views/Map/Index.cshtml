@model IEnumerable<DoggyDrop.Models.TrashBin>
@using System.Text.Json

@{
    ViewData["Title"] = "Zemljevid";
    var json = JsonSerializer.Serialize(
        Model.Select(b => new
        {
            name = b.Name,
            latitude = b.Latitude,
            longitude = b.Longitude,
            date = b.DateAdded.ToString("dd.MM.yyyy"),
            image = b.ImageUrl
        })
    );
    var binsJson = Html.Raw(json);
}

<style>
    #map {
        height: 100vh;
        width: 100%;
    }

    .fab-main {
        position: fixed;
        bottom: 80px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        background-color: #425F57;
        color: white;
        border-radius: 25px;
        padding: 14px 22px;
        font-size: 16px;
        border: none;
        box-shadow: 0 4px 6px rgba(0,0,0,0.3);
    }

    .fab-secondary {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
        width: 50px;
        height: 50px;
        background-color: #FFA447;
        color: white;
        border: none;
        border-radius: 50%;
        font-size: 28px;
        line-height: 50px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0,0,0,0.3);
    }

    
      @: @media (min-width: 768px) {
        .fab-main {
            font-size: 18px;
    }

    }


</style>

<!-- Glavni gumb -->
<button onclick="findNearestTrashBin()" class="fab-main">📍 Najdi najbližji koš</button>

<!-- Sekundarni gumb -->
<a href="/Map/Add" class="fab-secondary">＋</a>

<!-- Zemljevid -->
<div id="map"></div>

@section Scripts {
    <script>
        const bins = @binsJson;
        let map, directionsService, directionsRenderer;

        window.initMap = function () {
            directionsService = new google.maps.DirectionsService();
            directionsRenderer = new google.maps.DirectionsRenderer();

            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 46.5547, lng: 15.6459 },
                zoom: 14
            });

            directionsRenderer.setMap(map);

            bins.forEach(bin => {
                const marker = new google.maps.Marker({
                    position: { lat: bin.latitude, lng: bin.longitude },
                    map: map,
                    title: bin.name
                });

                const infoContent = `
                    <div style="max-width: 200px;">
                        <strong>${bin.name}</strong><br>
                        Dodano: ${bin.date}<br>
                        ${bin.image ? `<img src="${bin.image}" alt="Koš" style="width:100%; margin-top:5px;">` : ""}
                    </div>
                `;

                const infoWindow = new google.maps.InfoWindow({ content: infoContent });
                marker.addListener("click", () => infoWindow.open(map, marker));
            });
        };

        function findNearestTrashBin() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    const userLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    let nearestBin = null;
                    let shortestDistance = Infinity;

                    bins.forEach(bin => {
                        const dist = Math.sqrt(
                            Math.pow(bin.latitude - userLocation.lat, 2) +
                            Math.pow(bin.longitude - userLocation.lng, 2)
                        );
                        if (dist < shortestDistance) {
                            shortestDistance = dist;
                            nearestBin = bin;
                        }
                    });

                    if (nearestBin) {
                        directionsService.route({
                            origin: userLocation,
                            destination: { lat: nearestBin.latitude, lng: nearestBin.longitude },
                            travelMode: google.maps.TravelMode.WALKING
                        }, (result, status) => {
                            if (status === google.maps.DirectionsStatus.OK) {
                                directionsRenderer.setDirections(result);
                            } else {
                                alert("Napaka pri iskanju poti: " + status);
                            }
                        });
                    }
                }, () => alert("Napaka pri pridobivanju lokacije."));
            } else {
                alert("Geolokacija ni podprta.");
            }
        }
    </script>

    <script async
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC7BZuc_0STrDlrpQL6HF3mcQJW2HV4cDI&callback=initMap">
    </script>
}
